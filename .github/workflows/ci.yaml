name: Continuous Integration

on:
  push:
    branches:
    - main
    tags:
    - v*
  pull_request:
    branches:
    - main

# permissions: write-all

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - name: Tests
      run: |
        echo "Hello World"
  
  build-and-push:
    name: Release
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
    - name: debug
      run: |
        env
        echo ${{ github.env }}

    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: google-github-actions/release-please-action@v3
      id: release
      if: github.ref_name == 'main'
      with:
        release-type: go
    
    - name: Get Build timestamp and branch name
      run: |
        echo "BUILD_TIMESTAMP=$(date +'%s')" >> $GITHUB_ENV
        echo "VERSION=$( echo ${{ github.head_ref || github.ref_name }} | tr '/' '-' )" >> $GITHUB_ENV

    # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
    - name: Create Docker tags in a multiline string
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "DOCKER_TAGS<<$EOF" >> $GITHUB_ENV
        echo "ghcr.io/${{ github.repository }}:${{ env.VERSION }}" >> $GITHUB_ENV
        echo "ghcr.io/${{ github.repository }}:${{ github.sha }}" >> $GITHUB_ENV
        # If release is created, add tag name to tags
        if [[ "${{ steps.release.outputs.release_created }}" == "true" ]]; then
          echo "ghcr.io/${{ github.repository }}:${{ steps.release.outputs.tag_name }}" >> $GITHUB_ENV
        fi
        echo "$EOF" >> $GITHUB_ENV

    - name: For release version is tag name
      if: ${{ steps.release.outputs.release_created }}
      run: |
        echo "VERSION=${{ steps.release.outputs.tag_name }}" >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        build-args: |
          VERSION=${{ env.VERSION }}
          BUILD_TIMESTAMP=${{ env.BUILD_TIMESTAMP }}
          COMMIT_HASH=${{ github.sha }}
        tags: ${{ env.DOCKER_TAGS }}
